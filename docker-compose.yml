version: "3.8"

volumes:
  db-app:

services:
  web:
    build:
      context: .
      args:
        # Setting up a buildkit for faster builds
        - DOCKER_BUILDKIT=1
      dockerfile: Dockerfile
    image: team4/photoshare-app:latest
    container_name: photoshare_app
    ports:
      - "8000:8000"
    env_file:
<<<<<<< HEAD
      - .env 
=======
      - .env
>>>>>>> origin/develop
    depends_on:
      db-app:
        condition: service_healthy
    networks:
      - app-network

  db-app:
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: db-app
        target: /var/lib/postgresql/data

    ports:
      - 0.0.0.0:${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
<<<<<<< HEAD
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}"]
=======
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
>>>>>>> origin/develop
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

networks:
  app-network:
<<<<<<< HEAD
    name: app-network
=======
    name: app-network
>>>>>>> origin/develop
